diff -Npur linux-3.10-orig/fs/aufs/dcsub.c linux-3.10/fs/aufs/dcsub.c
--- linux-3.10-orig/fs/aufs/dcsub.c	2015-04-29 22:40:06.283275000 +0200
+++ linux-3.10/fs/aufs/dcsub.c	2015-04-29 22:46:47.401454025 +0200
@@ -133,7 +133,7 @@ resume:
 	while (next != &this_parent->d_subdirs) {
 		struct list_head *tmp = next;
 		struct dentry *dentry = list_entry(tmp, struct dentry,
-						   d_u.d_child);
+						   d_child);
 
 		next = tmp->next;
 		spin_lock_nested(&dentry->d_lock, DENTRY_D_LOCK_NESTED);
@@ -169,7 +169,7 @@ resume:
 		this_parent = tmp;
 		spin_lock(&this_parent->d_lock);
 		rcu_read_unlock();
-		next = child->d_u.d_child.next;
+		next = child->d_child.next;
 		goto resume;
 	}
 
diff -Npur linux-3.10-orig/fs/aufs/debug.c linux-3.10/fs/aufs/debug.c
--- linux-3.10-orig/fs/aufs/debug.c	2015-04-29 22:40:06.283275000 +0200
+++ linux-3.10/fs/aufs/debug.c	2015-04-29 22:46:47.404789024 +0200
@@ -169,7 +169,7 @@ void au_dpri_dalias(struct inode *inode)
 	struct dentry *d;
 
 	spin_lock(&inode->i_lock);
-	hlist_for_each_entry(d, &inode->i_dentry, d_alias)
+	hlist_for_each_entry(d, &inode->i_dentry, d_u.d_alias)
 		au_dpri_dentry(d);
 	spin_unlock(&inode->i_lock);
 }
diff -Npur linux-3.10-orig/fs/aufs/export.c linux-3.10/fs/aufs/export.c
--- linux-3.10-orig/fs/aufs/export.c	2015-04-29 22:40:06.286612000 +0200
+++ linux-3.10/fs/aufs/export.c	2015-04-29 22:46:47.418129024 +0200
@@ -243,7 +243,7 @@ static struct dentry *decode_by_ino(stru
 		dentry = d_find_alias(inode);
 	else {
 		spin_lock(&inode->i_lock);
-		hlist_for_each_entry(d, &inode->i_dentry, d_alias) {
+		hlist_for_each_entry(d, &inode->i_dentry, d_u.d_alias) {
 			spin_lock(&d->d_lock);
 			if (!au_test_anon(d)
 			    && d->d_parent->d_inode->i_ino == dir_ino) {
diff -Npur linux-3.10-orig/fs/aufs/hnotify.c linux-3.10/fs/aufs/hnotify.c
--- linux-3.10-orig/fs/aufs/hnotify.c	2015-04-29 22:40:06.293285000 +0200
+++ linux-3.10/fs/aufs/hnotify.c	2015-04-29 22:46:47.431469023 +0200
@@ -211,7 +211,7 @@ static int hn_gen_by_inode(char *name, u
 		AuDebugOn(!name);
 		au_iigen_dec(inode);
 		spin_lock(&inode->i_lock);
-		hlist_for_each_entry(d, &inode->i_dentry, d_alias) {
+		hlist_for_each_entry(d, &inode->i_dentry, d_u.d_alias) {
 			spin_lock(&d->d_lock);
 			dname = &d->d_name;
 			if (dname->len != nlen
@@ -378,7 +378,7 @@ static struct dentry *lookup_wlock_by_na
 
 	dentry = NULL;
 	spin_lock(&parent->d_lock);
-	list_for_each_entry(d, &parent->d_subdirs, d_u.d_child) {
+	list_for_each_entry(d, &parent->d_subdirs, d_child) {
 		/* AuDbg("%.*s\n", AuDLNPair(d)); */
 		spin_lock_nested(&d->d_lock, DENTRY_D_LOCK_NESTED);
 		dname = &d->d_name;
