commit a86d5a556dd22451bddf49ef2f9f72ed520aef39
Author: J. R. Okajima <hooanon05g@gmail.com>
Date:   Wed Jan 29 23:36:34 2014 +0900

    aufs: for linux-3.14, follow fsnotify
    
    Signed-off-by: J. R. Okajima <hooanon05g@gmail.com>

diff --git a/fs/aufs/hfsnotify.c b/fs/aufs/hfsnotify.c
index b575a8a..ed051f3 100644
--- a/fs/aufs/hfsnotify.c
+++ b/fs/aufs/hfsnotify.c
@@ -157,27 +157,27 @@ static void au_hfsn_free_group(struct fsnotify_group *group)
 }
 
 static int au_hfsn_handle_event(struct fsnotify_group *group,
+				struct inode *inode,
 				struct fsnotify_mark *inode_mark,
 				struct fsnotify_mark *vfsmount_mark,
-				struct fsnotify_event *event)
+				u32 mask, void *data, int data_type,
+				const unsigned char *file_name)
 {
 	int err;
 	struct au_hnotify *hnotify;
 	struct inode *h_dir, *h_inode;
-	__u32 mask;
-	struct qstr h_child_qstr = QSTR_INIT(event->file_name, event->name_len);
+	struct qstr h_child_qstr = QSTR_INIT(file_name, strlen(file_name));
 
-	AuDebugOn(event->data_type != FSNOTIFY_EVENT_INODE);
+	AuDebugOn(data_type != FSNOTIFY_EVENT_INODE);
 
 	err = 0;
 	/* if FS_UNMOUNT happens, there must be another bug */
-	mask = event->mask;
 	AuDebugOn(mask & FS_UNMOUNT);
 	if (mask & (FS_IN_IGNORED | FS_UNMOUNT))
 		goto out;
 
-	h_dir = event->to_tell;
-	h_inode = event->inode;
+	h_dir = inode;
+	h_inode = NULL;
 #ifdef AuDbgHnotify
 	au_debug_on();
 	if (1 || h_child_qstr.len != sizeof(AUFS_XINO_FNAME) - 1
@@ -198,21 +198,7 @@ out:
 	return err;
 }
 
-/* isn't it waste to ask every registered 'group'? */
-/* copied from linux/fs/notify/inotify/inotify_fsnotiry.c */
-/* it should be exported to modules */
-static bool au_hfsn_should_send_event(struct fsnotify_group *group,
-				      struct inode *h_inode,
-				      struct fsnotify_mark *inode_mark,
-				      struct fsnotify_mark *vfsmount_mark,
-				      __u32 mask, void *data, int data_type)
-{
-	mask = (mask & ~FS_EVENT_ON_CHILD);
-	return inode_mark->mask & mask;
-}
-
 static struct fsnotify_ops au_hfsn_ops = {
-	.should_send_event	= au_hfsn_should_send_event,
 	.handle_event		= au_hfsn_handle_event,
 	.free_group_priv	= au_hfsn_free_group
 };
diff --git a/fs/aufs/hnotify.c b/fs/aufs/hnotify.c
index 95205b1..9aa284a 100644
--- a/fs/aufs/hnotify.c
+++ b/fs/aufs/hnotify.c
@@ -584,7 +584,7 @@ int au_hnotify(struct inode *h_dir, struct au_hnotify *hnotify, u32 mask,
 		au_fset_hnjob(flags[AuHn_CHILD], MNTPNT);
 		/*FALLTHROUGH*/
 	case FS_CREATE:
-		AuDebugOn(!h_child_name || !h_child_inode);
+		AuDebugOn(!h_child_name);
 		break;
 
 	case FS_DELETE:
